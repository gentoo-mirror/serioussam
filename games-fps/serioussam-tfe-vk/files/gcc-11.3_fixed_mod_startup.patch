--- a/Engine/Base/Timer.cpp	2022-07-01 10:37:28.221379472 +0300
+++ b/Engine/Base/Timer.cpp	2022-07-01 12:13:20.798118894 +0300
@@ -359,7 +359,7 @@
   CTimer_TimerFunc_internal();
 }
 #elif (defined PLATFORM_UNIX)
-/*
+
 #include "SDL.h"
 Uint32 CTimer_TimerFunc_SDL(Uint32 interval, void* param)
 {
@@ -370,7 +370,7 @@
   CTimer_TimerFunc_internal();
   return(interval);
 }
-*/
+/*
 void *CTimer_TimerMain(void *input) {
   while(true) {
     // sleep
@@ -387,7 +387,7 @@
     // handle all timers
     CTimer_TimerFunc_internal();
   }
-}
+}*/
 
 #endif
 #endif
@@ -570,7 +570,7 @@
     if( tm_TimerID==NULL) FatalError(TRANS("Cannot initialize multimedia timer!"));
 
    #else
-/*
+
     if (SDL_Init(SDL_INIT_TIMER) == -1) FatalError(TRANS("Cannot initialize multimedia timer!"));
     tm_TimerID = SDL_AddTimer(ULONG(TickQuantum*1000.0f), CTimer_TimerFunc_SDL, NULL);
     if( tm_TimerID==NULL) FatalError(TRANS("Cannot initialize multimedia timer!"));
@@ -589,7 +589,7 @@
     // report fatal
     if( iTry>3) FatalError(TRANS("Problem with initializing multimedia timer - please try again."));
   }
-*/
+/*
     int ret = pthread_create(&g_timerMainThread, 0, &CTimer_TimerMain, nullptr);
     if (ret != 0) {
       const char *err;
@@ -611,7 +611,7 @@
     if (iTry > 3) {
       FatalError(TRANS("Problem with initializing multimedia timer - please try again."));
     }
-  }
+  }*/
 #endif  // !defined SINGLE_THREADED
 }
 
